{% set version = "2.12.0" %}

package:
  name: google-cloud-cpp-split
  version: {{ version }}

source:
  url: https://github.com/googleapis/google-cloud-cpp/archive/v{{ version }}.tar.gz
  sha256: 8cda870803925c62de8716a765e03eb9d34249977e5cdb7d0d20367e997a55e2
  patches:
    # Several libraries do not compile under Conda.  Depending on the platform
    # and compiler, they need a newer version of Protobuf.  That is, they
    # compile with older versions of Protobuf on some combinations of platform,
    # compiler, and C++ standard library. For more information, see:
    #   https://github.com/googleapis/google-cloud-cpp/issues/8125
    #   https://github.com/googleapis/google-cloud-cpp/issues/8145
    #   https://github.com/googleapis/google-cloud-cpp/issues/8785
    - patches/0001-disable-libraries.patch  # [libprotobuf == "3.21"]
    # disable a large new feature in 2.12 due to running into 6h timeout
    - patches/0002-disable-aiplatform-feature.patch  # [not (linux64 or osx)]

build:
  number: 3
requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - ninja
    - libgrpc
    - libprotobuf
  host:
    - libabseil
    - libcrc32c
    - libcurl
    - libgrpc
    - libprotobuf
    - openssl
    - nlohmann_json
    - zlib

outputs:
  - name: libgoogle-cloud
    script: build-libgoogle-cloud.sh  # [unix]
    script: build-libgoogle-cloud.bat  # [win]
    build:
      run_exports:
        # patch versions guaranteed to be ABI-compatible, see
        # https://github.com/googleapis/google-cloud-cpp/blob/main/doc/adr/2023-05-03-patch-releases-are-ABI-compatible.md
        - {{ pin_subpackage("libgoogle-cloud", max_pin="x.x") }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake
        - ninja
        - libgrpc
        - libprotobuf
      host:
        - libabseil
        - libcrc32c
        - libcurl
        - libgrpc
        - libprotobuf
        - openssl
        - nlohmann_json
      run_constrained:
        - google-cloud-cpp {{ version }} *_{{ PKG_BUILDNUM }}
    test:
      commands:
        - test -f $PREFIX/lib/libgoogle_cloud_cpp_storage.{{ version }}.dylib  # [osx]
        - test -f $PREFIX/lib/libgoogle_cloud_cpp_storage.so.{{ version }}  # [linux]
        - test ! -f $PREFIX/lib/pkgconfig/google_cloud_cpp_storage.pc  # [not win]
        - test ! -f $PREFIX/lib/cmake/google_cloud_cpp_storage/google_cloud_cpp_storage-config.cmake  # [not win]
        - test ! -f $PREFIX/include/google/cloud/storage/version.h  # [not win]
        - test -f $PREFIX/lib/libgoogle_cloud_cpp_bigtable.{{ version }}.dylib  # [osx]
        - test -f $PREFIX/lib/libgoogle_cloud_cpp_bigtable.so.{{ version }}  # [linux]
        - test ! -f $PREFIX/lib/cmake/google_cloud_cpp_bigtable/google_cloud_cpp_bigtable-config.cmake  # [not win]
        - test ! -f $PREFIX/include/google/cloud/bigtable/version.h  # [not win]
        # Currently, the windows build is static.
        #- if not exist %LIBRARY_PREFIX%\\bin\\libgoogle_cloud_cpp_storage.dll exit 1  # [win]
        #- if not exist %LIBRARY_PREFIX%\\lib\\pkgconfig\\google_cloud_cpp_storage.pc exit 1  # [win]
        - if exist %LIBRARY_PREFIX%\\lib\\cmake\\google_cloud_cpp_storage\\google_cloud_cpp_storage-config.cmake exit 1  # [win]
        - if exist %LIBRARY_PREFIX%\\include\\google\\cloud\\storage\\version.h exit 1  # [win]
        #- if not exist %LIBRARY_PREFIX%\\bin\\libgoogle_cloud_cpp_bigtable.dll exit 1  # [win]
        - if exist %LIBRARY_PREFIX%\\lib\\cmake\\google_cloud_cpp_bigtable\\google_cloud_cpp_bigtable-config.cmake exit 1  # [win]
        - if exist %LIBRARY_PREFIX%\\include\\google\\cloud\\bigtable\\version.h exit 1  # [win]

  - name: google-cloud-cpp
    script: build-libgoogle-cloud.sh  # [unix]
    script: build-libgoogle-cloud.bat  # [win]
    build:
      run_exports:
        - {{ pin_subpackage("libgoogle-cloud", max_pin="x.x") }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake
        - ninja
        - libgrpc
        - libprotobuf
      host:
        - {{ pin_subpackage("libgoogle-cloud", exact=True) }}
        - libabseil
        - libcrc32c
        - libcurl
        - libgrpc
        - libprotobuf
        - openssl
        - nlohmann_json
      run:
        - {{ pin_subpackage("libgoogle-cloud", exact=True) }}
        - nlohmann_json
        # cannot load package without zlib because it's specified
        # as required; if possible, this should be removed upstream
        - zlib
    test:
      commands:
        - ./run_test_google_cloud_cpp.sh   # [unix]
        - ./run_test_google_cloud_cpp.bat  # [win]
        - test -f $PREFIX/lib/cmake/google_cloud_cpp_storage/google_cloud_cpp_storage-config.cmake  # [not win]
        - test -f $PREFIX/include/google/cloud/storage/version.h  # [not win]
        - test -f $PREFIX/lib/cmake/google_cloud_cpp_bigtable/google_cloud_cpp_bigtable-config.cmake  # [not win]
        - test -f $PREFIX/include/google/cloud/bigtable/version.h  # [not win]
        - if not exist %LIBRARY_PREFIX%\\lib\\cmake\\google_cloud_cpp_storage\\google_cloud_cpp_storage-config.cmake exit 1  # [win]
        - if not exist %LIBRARY_PREFIX%\\include\\google\\cloud\\storage\\version.h exit 1  # [win]
        - if not exist %LIBRARY_PREFIX%\\lib\\cmake\\google_cloud_cpp_bigtable\\google_cloud_cpp_bigtable-config.cmake exit 1  # [win]
        - if not exist %LIBRARY_PREFIX%\\include\\google\\cloud\\bigtable\\version.h exit 1  # [win]
      requires:
        - {{ compiler('cxx') }}
        - cmake
        - ninja
      files:
        - run_test_google_cloud_cpp.sh
        - run_test_google_cloud_cpp.bat
      source_files:
        - google/cloud/storage/quickstart/*.cc
        - google/cloud/storage/quickstart/CMakeLists.txt

about:
  home: https://github.com/googleapis/google-cloud-cpp
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: Google Cloud Client Library for C++

extra:
  feedstock-name: google-cloud-cpp
  recipe-maintainers:
    - coryan
    - davidbrochart
    - dbolduc
    - h-vetinari
    - xhochy
